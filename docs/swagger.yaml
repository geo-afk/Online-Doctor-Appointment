definitions:
  models.Auth:
    properties:
      id:
        type: string
      password:
        type: string
      user_name:
        type: string
    type: object
  models.ContactDetail:
    properties:
      email:
        type: string
      id:
        type: integer
      primary_contact:
        type: string
      secondary_number:
        type: string
    type: object
  models.User:
    properties:
      auth:
        $ref: '#/definitions/models.Auth'
      contact:
        $ref: '#/definitions/models.ContactDetail'
      created_at:
        type: string
      emergency_contact:
        $ref: '#/definitions/models.ContactDetail'
      first_name:
        type: string
      id:
        type: integer
      last_name:
        type: string
      location:
        type: string
      user_role:
        type: string
    type: object
  server.tokenResponse:
    properties:
      token:
        type: string
      user_role: {}
    type: object
host: localhost:3400
info:
  contact: {}
  description: This is a client-doctor/s appointment project to do booking, consultation,
    etc
  license:
    name: MIT
    url: github.com/geo-afk/Online-Doctor-Appointment/blob/main/LICENSE
  title: CD-Appointment
  version: 1.0.0
paths:
  /health:
    get:
      operationId: health
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
      summary: get the Database health
  /login:
    post:
      consumes:
      - application/json
      parameters:
      - description: Login credentials
        in: body
        name: login
        required: true
        schema:
          $ref: '#/definitions/models.Auth'
      produces:
      - application/json
      responses:
        "200":
          description: Login successful, returns JWT token
          schema:
            $ref: '#/definitions/server.tokenResponse'
        "204":
          description: Invalid credentials for user login
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      summary: Login Panel for both Doctor and Patient
      tags:
      - Login
  /register:
    post:
      consumes:
      - application/json
      description: Registers a new user, handling both doctor and patient profiles.
      parameters:
      - description: User Details
        in: body
        name: Register
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - text/plain
      responses:
        "200":
          description: Successfully registered
          schema:
            type: boolean
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Register a new user (Doctor or Patient)
      tags:
      - Register
swagger: "2.0"
