{
    "swagger": "2.0",
    "info": {
        "description": "This is a client-doctor/s appointment project to do booking, consultation, etc",
        "title": "CD-Appointment",
        "contact": {},
        "license": {
            "name": "MIT",
            "url": "github.com/geo-afk/Online-Doctor-Appointment/blob/main/LICENSE"
        },
        "version": "1.0.0"
    },
    "host": "localhost:3400",
    "paths": {
        "/api/v1/book_appointment": {
            "post": {
                "security": [
                    {
                        "bearerToken": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "BookAppointment"
                ],
                "summary": "Appointment ;patients come and book appointments",
                "parameters": [
                    {
                        "description": "Book Appointment",
                        "name": "appointment",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Appointment"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Login successfully booked appointment",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "204": {
                        "description": "Unable to book appointment",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/health": {
            "get": {
                "description": "Get the Database health",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Health"
                ],
                "summary": "Get the Database health",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "map"
                        }
                    }
                }
            }
        },
        "/login": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Login"
                ],
                "summary": "Login Panel for both Doctor and Patient",
                "parameters": [
                    {
                        "description": "Login credentials",
                        "name": "login",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Auth"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Login successful, returns JWT token",
                        "schema": {
                            "$ref": "#/definitions/server.UserLoginReq"
                        }
                    },
                    "204": {
                        "description": "Invalid credentials for user login",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/logout": {
            "delete": {
                "description": "Logs out the user that is currently logged in",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Logout"
                ],
                "summary": "When a logged in user want to logout",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Path Variable",
                        "name": "logout",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request: Missing Id",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: when deleting session",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/register": {
            "post": {
                "description": "Registers a new user, handling both doctor and patient profiles.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "Register"
                ],
                "summary": "Register a new user (Doctor or Patient)",
                "parameters": [
                    {
                        "description": "User Details",
                        "name": "Register",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully registered",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/renew/token": {
            "post": {
                "description": "Logged in users can use to get a new session token",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "RenewToken"
                ],
                "summary": "Renew user token",
                "parameters": [
                    {
                        "description": "access token request",
                        "name": "RenewToken",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/server.RenewAccessTokenReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/server.RenewAccessTokenRes"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Un Authorized",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: when deleting session",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/revoke/token": {
            "delete": {
                "description": "Logs out the user that is currently logged in",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "RevokeSession"
                ],
                "summary": "When a logged in user want to revoke their session",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Path Variable",
                        "name": "RevokeSession",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request: Missing Id",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: when deleting session",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.Appointment": {
            "type": "object",
            "properties": {
                "appointment_status": {
                    "type": "string"
                },
                "booked": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "reason": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "models.Auth": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "user_name": {
                    "type": "string"
                }
            }
        },
        "models.ContactDetail": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "primary_contact": {
                    "type": "string"
                },
                "secondary_number": {
                    "type": "string"
                }
            }
        },
        "models.User": {
            "type": "object",
            "properties": {
                "auth": {
                    "$ref": "#/definitions/models.Auth"
                },
                "contact": {
                    "$ref": "#/definitions/models.ContactDetail"
                },
                "created_at": {
                    "type": "string"
                },
                "emergency_contact": {
                    "$ref": "#/definitions/models.ContactDetail"
                },
                "first_name": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "last_name": {
                    "type": "string"
                },
                "location": {
                    "type": "string"
                },
                "user_role": {
                    "type": "string"
                }
            }
        },
        "server.RenewAccessTokenReq": {
            "type": "object",
            "properties": {
                "refresh_token": {
                    "type": "string"
                }
            }
        },
        "server.RenewAccessTokenRes": {
            "type": "object",
            "properties": {
                "access_token_expires_at": {
                    "type": "string"
                },
                "refresh_token": {
                    "type": "string"
                }
            }
        },
        "server.UserLoginReq": {
            "type": "object",
            "properties": {
                "access_token": {
                    "type": "string"
                },
                "access_token_expires_at": {
                    "type": "string"
                },
                "refresh_token": {
                    "type": "string"
                },
                "refresh_token_expires_at": {
                    "type": "string"
                },
                "session_id": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        }
    },
    "securityDefinitions": {
        "bearerToken": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}